/*
 * Automatically generated by jrpcgen 1.0.7 on 29.11.2012
 * jrpcgen is part of the "Remote Tea.Net" ONC/RPC package for C#
 * See http://remotetea.sourceforge.net for details
 */
namespace NFSLibrary.Protocols.V4.RPC{
using org.acplt.oncrpc;

public class nfsv4_1_file_layout4 : XdrAble {
    public deviceid4 nfl_deviceid;
    public nfl_util4 nfl_util;
    public int nfl_first_stripe_index;
    public offset4 nfl_pattern_offset;
    public nfs_fh4 [] nfl_fh_list;

    public nfsv4_1_file_layout4() {
    }

    public nfsv4_1_file_layout4(XdrDecodingStream xdr) {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr) {
        nfl_util.xdrEncode(xdr);
        xdr.xdrEncodeInt(nfl_first_stripe_index);
        nfl_pattern_offset.xdrEncode(xdr);
        { int _size = nfl_fh_list.Length; xdr.xdrEncodeInt(_size); for ( int _idx = 0; _idx < _size; ++_idx ) { nfl_fh_list[_idx].xdrEncode(xdr); } }
    }

    public void xdrDecode(XdrDecodingStream xdr) {
        nfl_util = new nfl_util4(xdr);
        nfl_first_stripe_index = xdr.xdrDecodeInt();
        nfl_pattern_offset = new offset4(xdr);
        { int _size = xdr.xdrDecodeInt(); nfl_fh_list = new nfs_fh4[_size]; for ( int _idx = 0; _idx < _size; ++_idx ) { nfl_fh_list[_idx] = new nfs_fh4(xdr); } }
    }

}
} // End of nfsv4_1_file_layout4.cs
