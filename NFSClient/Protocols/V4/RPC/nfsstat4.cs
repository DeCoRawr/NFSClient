/*
 * Automatically generated by jrpcgen 1.0.7 on 29.11.2012
 * jrpcgen is part of the "Remote Tea.Net" ONC/RPC package for C#
 * See http://remotetea.sourceforge.net for details
 */
namespace NFSLibrary.Protocols.V4.RPC
{
    /**
     * Enumeration (collection of constants).
     */
    public class nfsstat4
    {

        public const int NFS4_OK = 0;
        public const int NFS4ERR_PERM = 1;
        public const int NFS4ERR_NOENT = 2;
        public const int NFS4ERR_IO = 5;
        public const int NFS4ERR_NXIO = 6;
        public const int NFS4ERR_ACCESS = 13;
        public const int NFS4ERR_EXIST = 17;
        public const int NFS4ERR_XDEV = 18;
        public const int NFS4ERR_NOTDIR = 20;
        public const int NFS4ERR_ISDIR = 21;
        public const int NFS4ERR_INVAL = 22;
        public const int NFS4ERR_FBIG = 27;
        public const int NFS4ERR_NOSPC = 28;
        public const int NFS4ERR_ROFS = 30;
        public const int NFS4ERR_MLINK = 31;
        public const int NFS4ERR_NAMETOOLONG = 63;
        public const int NFS4ERR_NOTEMPTY = 66;
        public const int NFS4ERR_DQUOT = 69;
        public const int NFS4ERR_STALE = 70;
        public const int NFS4ERR_BADHANDLE = 10001;
        public const int NFS4ERR_BAD_COOKIE = 10003;
        public const int NFS4ERR_NOTSUPP = 10004;
        public const int NFS4ERR_TOOSMALL = 10005;
        public const int NFS4ERR_SERVERFAULT = 10006;
        public const int NFS4ERR_BADTYPE = 10007;
        public const int NFS4ERR_DELAY = 10008;
        public const int NFS4ERR_SAME = 10009;
        public const int NFS4ERR_DENIED = 10010;
        public const int NFS4ERR_EXPIRED = 10011;
        public const int NFS4ERR_LOCKED = 10012;
        public const int NFS4ERR_GRACE = 10013;
        public const int NFS4ERR_FHEXPIRED = 10014;
        public const int NFS4ERR_SHARE_DENIED = 10015;
        public const int NFS4ERR_WRONGSEC = 10016;
        public const int NFS4ERR_CLID_INUSE = 10017;
        public const int NFS4ERR_RESOURCE = 10018;
        public const int NFS4ERR_MOVED = 10019;
        public const int NFS4ERR_NOFILEHANDLE = 10020;
        public const int NFS4ERR_MINOR_VERS_MISMATCH = 10021;
        public const int NFS4ERR_STALE_CLIENTID = 10022;
        public const int NFS4ERR_STALE_STATEID = 10023;
        public const int NFS4ERR_OLD_STATEID = 10024;
        public const int NFS4ERR_BAD_STATEID = 10025;
        public const int NFS4ERR_BAD_SEQID = 10026;
        public const int NFS4ERR_NOT_SAME = 10027;
        public const int NFS4ERR_LOCK_RANGE = 10028;
        public const int NFS4ERR_SYMLINK = 10029;
        public const int NFS4ERR_RESTOREFH = 10030;
        public const int NFS4ERR_LEASE_MOVED = 10031;
        public const int NFS4ERR_ATTRNOTSUPP = 10032;
        public const int NFS4ERR_NO_GRACE = 10033;
        public const int NFS4ERR_RECLAIM_BAD = 10034;
        public const int NFS4ERR_RECLAIM_CONFLICT = 10035;
        public const int NFS4ERR_BADXDR = 10036;
        public const int NFS4ERR_LOCKS_HELD = 10037;
        public const int NFS4ERR_OPENMODE = 10038;
        public const int NFS4ERR_BADOWNER = 10039;
        public const int NFS4ERR_BADCHAR = 10040;
        public const int NFS4ERR_BADNAME = 10041;
        public const int NFS4ERR_BAD_RANGE = 10042;
        public const int NFS4ERR_LOCK_NOTSUPP = 10043;
        public const int NFS4ERR_OP_ILLEGAL = 10044;
        public const int NFS4ERR_DEADLOCK = 10045;
        public const int NFS4ERR_FILE_OPEN = 10046;
        public const int NFS4ERR_ADMIN_REVOKED = 10047;
        public const int NFS4ERR_CB_PATH_DOWN = 10048;
        public const int NFS4ERR_BADIOMODE = 10049;
        public const int NFS4ERR_BADLAYOUT = 10050;
        public const int NFS4ERR_BAD_SESSION_DIGEST = 10051;
        public const int NFS4ERR_BADSESSION = 10052;
        public const int NFS4ERR_BADSLOT = 10053;
        public const int NFS4ERR_COMPLETE_ALREADY = 10054;
        public const int NFS4ERR_CONN_NOT_BOUND_TO_SESSION = 10055;
        public const int NFS4ERR_DELEG_ALREADY_WANTED = 10056;
        public const int NFS4ERR_BACK_CHAN_BUSY = 10057;
        public const int NFS4ERR_LAYOUTTRYLATER = 10058;
        public const int NFS4ERR_LAYOUTUNAVAILABLE = 10059;
        public const int NFS4ERR_NOMATCHING_LAYOUT = 10060;
        public const int NFS4ERR_RECALLCONFLICT = 10061;
        public const int NFS4ERR_UNKNOWN_LAYOUTTYPE = 10062;
        public const int NFS4ERR_SEQ_MISORDERED = 10063;
        public const int NFS4ERR_SEQUENCE_POS = 10064;
        public const int NFS4ERR_REQ_TOO_BIG = 10065;
        public const int NFS4ERR_REP_TOO_BIG = 10066;
        public const int NFS4ERR_REP_TOO_BIG_TO_CACHE = 10067;
        public const int NFS4ERR_RETRY_UNCACHED_REP = 10068;
        public const int NFS4ERR_UNSAFE_COMPOUND = 10069;
        public const int NFS4ERR_TOO_MANY_OPS = 10070;
        public const int NFS4ERR_OP_NOT_IN_SESSION = 10071;
        public const int NFS4ERR_HASH_ALG_UNSUPP = 10072;
        public const int NFS4ERR_CLIENTID_BUSY = 10074;
        public const int NFS4ERR_PNFS_IO_HOLE = 10075;
        public const int NFS4ERR_SEQ_FALSE_RETRY = 10076;
        public const int NFS4ERR_BAD_HIGH_SLOT = 10077;
        public const int NFS4ERR_DEADSESSION = 10078;
        public const int NFS4ERR_ENCR_ALG_UNSUPP = 10079;
        public const int NFS4ERR_PNFS_NO_LAYOUT = 10080;
        public const int NFS4ERR_NOT_ONLY_OP = 10081;
        public const int NFS4ERR_WRONG_CRED = 10082;
        public const int NFS4ERR_WRONG_TYPE = 10083;
        public const int NFS4ERR_DIRDELEG_UNAVAIL = 10084;
        public const int NFS4ERR_REJECT_DELEG = 10085;
        public const int NFS4ERR_RETURNCONFLICT = 10086;
        public const int NFS4ERR_DELEG_REVOKED = 10087;




        public static string getErrorString(int ErrorCode)
        {
                    switch (ErrorCode)
                    {
case NFS4_OK: return "Error num= 0     everything is okay";
case NFS4ERR_PERM: return "Error num= 1     caller not privileged";
case NFS4ERR_NOENT: return "Error num= 2     no such file/directory";
case NFS4ERR_IO: return "Error num= 5     hard I/O error";
case NFS4ERR_NXIO: return "Error num= 6     no such device";
case NFS4ERR_ACCESS: return "Error num= 13    access denied";
case NFS4ERR_EXIST: return "Error num= 17    file already exists";
case NFS4ERR_XDEV: return "Error num= 18    different filesystems";
case NFS4ERR_NOTDIR: return "Error num= 20    should be a directory";
case NFS4ERR_ISDIR: return "Error num= 21    should not be directory";
case NFS4ERR_INVAL: return "Error num= 22    invalid argument";
case NFS4ERR_FBIG: return "Error num= 27    file exceeds server max";
case NFS4ERR_NOSPC: return "Error num= 28    no space on filesystem";
case NFS4ERR_ROFS: return "Error num= 30    read-only filesystem";
case NFS4ERR_MLINK: return "Error num= 31    too many hard links";
case NFS4ERR_NAMETOOLONG: return "Error num= 63    name exceeds server max";
case NFS4ERR_NOTEMPTY: return "Error num= 66    directory not empty";
case NFS4ERR_DQUOT: return "Error num= 69    hard quota limit reached";
case NFS4ERR_STALE: return "Error num= 70    file no longer exists";
case NFS4ERR_BADHANDLE: return "Error num= 10001 Illegal filehandle";
case NFS4ERR_BAD_COOKIE: return "Error num= 10003 READDIR cookie is stale";
case NFS4ERR_NOTSUPP: return "Error num= 10004 operation not supported";
case NFS4ERR_TOOSMALL: return "Error num= 10005 response limit exceeded";
case NFS4ERR_SERVERFAULT: return "Error num= 10006 undefined server error";
case NFS4ERR_BADTYPE: return "Error num= 10007 type invalid for CREATE";
case NFS4ERR_DELAY: return "Error num= 10008 file 'busy' - retry";
case NFS4ERR_SAME: return "Error num= 10009 nverify says attrs same";
case NFS4ERR_DENIED: return "Error num= 10010 lock unavailable";
case NFS4ERR_EXPIRED: return "Error num= 10011 lock lease expired";
case NFS4ERR_LOCKED: return "Error num= 10012 I/O failed due to lock";
case NFS4ERR_GRACE: return "Error num= 10013 in grace period";
case NFS4ERR_FHEXPIRED: return "Error num= 10014 filehandle expired";
case NFS4ERR_SHARE_DENIED: return "Error num= 10015 share reserve denied";
case NFS4ERR_WRONGSEC: return "Error num= 10016 wrong security flavor";
case NFS4ERR_CLID_INUSE: return "Error num= 10017 clientid in use";
case NFS4ERR_RESOURCE: return "Error num= 10018 resource exhaustion";
case NFS4ERR_MOVED: return "Error num= 10019 filesystem relocated";
case NFS4ERR_NOFILEHANDLE: return "Error num= 10020 current FH is not set";
case NFS4ERR_MINOR_VERS_MISMATCH: return "Error num= 10021 minor vers not supp";
case NFS4ERR_STALE_CLIENTID: return "Error num= 10022 server has rebooted";
case NFS4ERR_STALE_STATEID: return "Error num= 10023 server has rebooted";
case NFS4ERR_OLD_STATEID: return "Error num= 10024 state is out of sync";
case NFS4ERR_BAD_STATEID: return "Error num= 10025 incorrect stateid";
case NFS4ERR_BAD_SEQID: return "Error num= 10026 request is out of seq.";
case NFS4ERR_NOT_SAME: return "Error num= 10027 verify - attrs not same";
case NFS4ERR_LOCK_RANGE: return "Error num= 10028 overlapping lock range";
case NFS4ERR_SYMLINK: return "Error num= 10029 should be file/directory";
case NFS4ERR_RESTOREFH: return "Error num= 10030 no saved filehandle";
case NFS4ERR_LEASE_MOVED: return "Error num= 10031 some filesystem moved";
case NFS4ERR_ATTRNOTSUPP: return "Error num= 10032 recommended attr not sup";
case NFS4ERR_NO_GRACE: return "Error num= 10033 reclaim outside of grace";
case NFS4ERR_RECLAIM_BAD: return "Error num= 10034 reclaim error at server";
case NFS4ERR_RECLAIM_CONFLICT: return "Error num= 10035 conflict on reclaim";
case NFS4ERR_BADXDR: return "Error num= 10036 XDR decode failed";
case NFS4ERR_LOCKS_HELD: return "Error num= 10037 file locks held at CLOSE";
case NFS4ERR_OPENMODE: return "Error num= 10038 conflict in OPEN and I/O";
case NFS4ERR_BADOWNER: return "Error num= 10039 owner translation bad";
case NFS4ERR_BADCHAR: return "Error num= 10040 utf-8 char not supported";
case NFS4ERR_BADNAME: return "Error num= 10041 name not supported";
case NFS4ERR_BAD_RANGE: return "Error num= 10042 lock range not supported";
case NFS4ERR_LOCK_NOTSUPP: return "Error num= 10043 no atomic up/downgrade";
case NFS4ERR_OP_ILLEGAL: return "Error num= 10044 undefined operation";
case NFS4ERR_DEADLOCK: return "Error num= 10045 file locking deadlock";
case NFS4ERR_FILE_OPEN: return "Error num= 10046 open file blocks op.";
case NFS4ERR_ADMIN_REVOKED: return "Error num= 10047 lockowner state revoked";
case NFS4ERR_CB_PATH_DOWN: return "Error num= 10048 callback path down";
case NFS4ERR_BADIOMODE: return "Error num= 10049";
case NFS4ERR_BADLAYOUT: return "Error num= 10050";
case NFS4ERR_BAD_SESSION_DIGEST: return "Error num= 10051";
case NFS4ERR_BADSESSION: return "Error num= 10052 Bad Session";
case NFS4ERR_BADSLOT: return "Error num= 10053 Bad slot";
case NFS4ERR_COMPLETE_ALREADY: return "Error num= 10054";
case NFS4ERR_CONN_NOT_BOUND_TO_SESSION: return "Error num= 10055";
case NFS4ERR_DELEG_ALREADY_WANTED: return "Error num= 10056";
case NFS4ERR_BACK_CHAN_BUSY: return "Error num= 10057backchan reqs outstanding";
case NFS4ERR_LAYOUTTRYLATER: return "Error num= 10058";
case NFS4ERR_LAYOUTUNAVAILABLE: return "Error num= 10059";
case NFS4ERR_NOMATCHING_LAYOUT: return "Error num= 10060";
case NFS4ERR_RECALLCONFLICT: return "Error num= 10061";
case NFS4ERR_UNKNOWN_LAYOUTTYPE: return "Error num= 10062";
case NFS4ERR_SEQ_MISORDERED: return "Error num= 10063 unexpected seq.ID in req";
case NFS4ERR_SEQUENCE_POS: return "Error num= 10064 [CB_]SEQ. op not 1st op";
case NFS4ERR_REQ_TOO_BIG: return "Error num= 10065 request too big";
case NFS4ERR_REP_TOO_BIG: return "Error num= 10066 reply too big";
case NFS4ERR_REP_TOO_BIG_TO_CACHE: return "Error num=10067 rep. not all cached";
case NFS4ERR_RETRY_UNCACHED_REP: return "Error num=10068 retry & rep. uncached";
case NFS4ERR_UNSAFE_COMPOUND: return "Error num=10069 retry/recovery too hard";
case NFS4ERR_TOO_MANY_OPS: return "Error num= 10070too many ops in [CB_]COMP";
case NFS4ERR_OP_NOT_IN_SESSION: return "Error num=10071 op needs [CB_]SEQ. op";
case NFS4ERR_HASH_ALG_UNSUPP: return "Error num= 10072  hash alg. not supp.";
case NFS4ERR_CLIENTID_BUSY: return "Error num= 10074 clientid has state";
case NFS4ERR_PNFS_IO_HOLE: return "Error num= 10075 IO to _SPARSE file hole";
case NFS4ERR_SEQ_FALSE_RETRY: return "Error num= 10076 Retry !: return 'riginal req.'";
case NFS4ERR_BAD_HIGH_SLOT: return "Error num= 10077 req has bad highest_slot";
case NFS4ERR_DEADSESSION: return "Error num= 10078new req sent to dead sess";
case NFS4ERR_ENCR_ALG_UNSUPP: return "Error num= 10079 encr alg. not supp.";
case NFS4ERR_PNFS_NO_LAYOUT: return "Error num= 10080 I/O without a layout";
case NFS4ERR_NOT_ONLY_OP: return "Error num= 10081 addl ops not allowed";
case NFS4ERR_WRONG_CRED: return "Error num= 10082 op done by wrong cred";
case NFS4ERR_WRONG_TYPE: return "Error num= 10083 op on wrong type object";
case NFS4ERR_DIRDELEG_UNAVAIL: return "Error num=10084 delegation not avail.";
case NFS4ERR_REJECT_DELEG: return "Error num= 10085 cb rejected delegation";
case NFS4ERR_RETURNCONFLICT: return "Error num= 10086 layout get before: return";
case NFS4ERR_DELEG_REVOKED: return "Error num= 10087  deleg./layout revoked";

                        default:
                            return "";
                    }
        }



    }
}
 // End of nfsstat4.cs
