/*
 * Automatically generated by jrpcgen 1.0.7 on 29.11.2012
 * jrpcgen is part of the "Remote Tea.Net" ONC/RPC package for C#
 * See http://remotetea.sourceforge.net for details
 */
namespace NFSLibrary.Protocols.V4.RPC{
using org.acplt.oncrpc;

public class GET_DIR_DELEGATION4res_non_fatal : XdrAble {
    public int gddrnf_status;
    public GET_DIR_DELEGATION4resok gddrnf_resok4;
    public bool gddrnf_will_signal_deleg_avail;

    public GET_DIR_DELEGATION4res_non_fatal() {
    }

    public GET_DIR_DELEGATION4res_non_fatal(XdrDecodingStream xdr) {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr) {
        xdr.xdrEncodeInt(gddrnf_status);
        switch ( gddrnf_status ) {
        case gddrnf4_status.GDD4_OK:
            gddrnf_resok4.xdrEncode(xdr);
            break;
        case gddrnf4_status.GDD4_UNAVAIL:
            xdr.xdrEncodeBoolean(gddrnf_will_signal_deleg_avail);
            break;
        }
    }

    public void xdrDecode(XdrDecodingStream xdr) {
        gddrnf_status = xdr.xdrDecodeInt();
        switch ( gddrnf_status ) {
        case gddrnf4_status.GDD4_OK:
            gddrnf_resok4 = new GET_DIR_DELEGATION4resok(xdr);
            break;
        case gddrnf4_status.GDD4_UNAVAIL:
            gddrnf_will_signal_deleg_avail = xdr.xdrDecodeBoolean();
            break;
        }
    }

}
} // End of  GET_DIR_DELEGATION4res_non_fatal.cs
