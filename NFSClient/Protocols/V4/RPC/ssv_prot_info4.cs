/*
 * Automatically generated by jrpcgen 1.0.7 on 29.11.2012
 * jrpcgen is part of the "Remote Tea.Net" ONC/RPC package for C#
 * See http://remotetea.sourceforge.net for details
 */
namespace NFSLibrary.Protocols.V4.RPC{
using org.acplt.oncrpc;

public class ssv_prot_info4 : XdrAble {
    public state_protect_ops4 spi_ops;
    public int spi_hash_alg;
    public int spi_encr_alg;
    public int spi_ssv_len;
    public int spi_window;
    public gsshandle4_t [] spi_handles;

    public ssv_prot_info4() {
    }

    public ssv_prot_info4(XdrDecodingStream xdr) {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr) {
        xdr.xdrEncodeInt(spi_hash_alg);
        xdr.xdrEncodeInt(spi_encr_alg);
        xdr.xdrEncodeInt(spi_ssv_len);
        xdr.xdrEncodeInt(spi_window);
        { int _size = spi_handles.Length; xdr.xdrEncodeInt(_size); for ( int _idx = 0; _idx < _size; ++_idx ) { spi_handles[_idx].xdrEncode(xdr); } }
    }

    public void xdrDecode(XdrDecodingStream xdr) {
        spi_hash_alg = xdr.xdrDecodeInt();
        spi_encr_alg = xdr.xdrDecodeInt();
        spi_ssv_len = xdr.xdrDecodeInt();
        spi_window = xdr.xdrDecodeInt();
        { int _size = xdr.xdrDecodeInt(); spi_handles = new gsshandle4_t[_size]; for ( int _idx = 0; _idx < _size; ++_idx ) { spi_handles[_idx] = new gsshandle4_t(xdr); } }
    }

}
} // End of ssv_prot_info4.cs
