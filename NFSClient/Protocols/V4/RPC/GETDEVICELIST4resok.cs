/*
 * Automatically generated by jrpcgen 1.0.7 on 29.11.2012
 * jrpcgen is part of the "Remote Tea.Net" ONC/RPC package for C#
 * See http://remotetea.sourceforge.net for details
 */
namespace NFSLibrary.Protocols.V4.RPC{
using org.acplt.oncrpc;

public class GETDEVICELIST4resok : XdrAble {
    public nfs_cookie4 gdlr_cookie;
    public verifier4 gdlr_cookieverf;
    public deviceid4 [] gdlr_deviceid_list;
    public bool gdlr_eof;

    public GETDEVICELIST4resok() {
    }

    public GETDEVICELIST4resok(XdrDecodingStream xdr) {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr) {
        gdlr_cookieverf.xdrEncode(xdr);
        { int _size = gdlr_deviceid_list.Length; xdr.xdrEncodeInt(_size); for ( int _idx = 0; _idx < _size; ++_idx ) { gdlr_deviceid_list[_idx].xdrEncode(xdr); } }
        xdr.xdrEncodeBoolean(gdlr_eof);
    }

    public void xdrDecode(XdrDecodingStream xdr) {
        gdlr_cookieverf = new verifier4(xdr);
        { int _size = xdr.xdrDecodeInt(); gdlr_deviceid_list = new deviceid4[_size]; for ( int _idx = 0; _idx < _size; ++_idx ) { gdlr_deviceid_list[_idx] = new deviceid4(xdr); } }
        gdlr_eof = xdr.xdrDecodeBoolean();
    }

}
} // End of  GETDEVICELIST4resok.cs
