/*
 * Automatically generated by jrpcgen 1.0.7 on 29.11.2012
 * jrpcgen is part of the "Remote Tea.Net" ONC/RPC package for C#
 * See http://remotetea.sourceforge.net for details
 */
namespace NFSLibrary.Protocols.V4.RPC{
using org.acplt.oncrpc;

public class ssv_sp_parms4 : XdrAble {
    public state_protect_ops4 ssp_ops;
    public sec_oid4 [] ssp_hash_algs;
    public sec_oid4 [] ssp_encr_algs;
    public int ssp_window;
    public int ssp_num_gss_handles;

    public ssv_sp_parms4() {
    }

    public ssv_sp_parms4(XdrDecodingStream xdr) {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr) {
        { int _size = ssp_hash_algs.Length; xdr.xdrEncodeInt(_size); for ( int _idx = 0; _idx < _size; ++_idx ) { ssp_hash_algs[_idx].xdrEncode(xdr); } }
        { int _size = ssp_encr_algs.Length; xdr.xdrEncodeInt(_size); for ( int _idx = 0; _idx < _size; ++_idx ) { ssp_encr_algs[_idx].xdrEncode(xdr); } }
        xdr.xdrEncodeInt(ssp_window);
        xdr.xdrEncodeInt(ssp_num_gss_handles);
    }

    public void xdrDecode(XdrDecodingStream xdr) {
        { int _size = xdr.xdrDecodeInt(); ssp_hash_algs = new sec_oid4[_size]; for ( int _idx = 0; _idx < _size; ++_idx ) { ssp_hash_algs[_idx] = new sec_oid4(xdr); } }
        { int _size = xdr.xdrDecodeInt(); ssp_encr_algs = new sec_oid4[_size]; for ( int _idx = 0; _idx < _size; ++_idx ) { ssp_encr_algs[_idx] = new sec_oid4(xdr); } }
        ssp_window = xdr.xdrDecodeInt();
        ssp_num_gss_handles = xdr.xdrDecodeInt();
    }

}
} // End of ssv_sp_parms4.cs
