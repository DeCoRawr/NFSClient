/*
 * Automatically generated by jrpcgen 1.0.7 on 29.11.2012
 * jrpcgen is part of the "Remote Tea.Net" ONC/RPC package for C#
 * See http://remotetea.sourceforge.net for details
 */
using NFSLibrary.Protocols.Commons;
using org.acplt.oncrpc;

namespace NFSLibrary.Protocols.V2.RPC
{
    public class ReadStatus : XdrAble
    {
        private NFSStats _status;
        private ReadAccessOK _ok;

        public ReadStatus()
        { }

        public ReadStatus(XdrDecodingStream xdr)
        { xdrDecode(xdr); }

        public void xdrEncode(XdrEncodingStream xdr)
        {
            xdr.xdrEncodeInt((int)this._status);

            switch (this._status)
            {
                case NFSStats.NFS_OK:
                    this._ok.xdrEncode(xdr);
                    break;
                default:
                    break;
            }
        }

        public void xdrDecode(XdrDecodingStream xdr)
        {
            this._status = (NFSStats)xdr.xdrDecodeInt();
            switch (this._status)
            {
                case NFSStats.NFS_OK:
                    this._ok = new ReadAccessOK(xdr);
                    break;
                default:
                    break;
            }
        }

        public NFSStats Status
        {
            get
            { return this._status; }
        }

        public ReadAccessOK OK
        {
            get
            { return this._ok; }
        }
    }

    public class ReadAccessOK : XdrAble
    {
        private FileAttributes _attributes;
        private byte[] _data;

        public ReadAccessOK()
        { }

        public ReadAccessOK(XdrDecodingStream xdr)
        { xdrDecode(xdr); }

        public void xdrEncode(XdrEncodingStream xdr)
        {
            this._attributes.xdrEncode(xdr);
            xdr.xdrEncodeDynamicOpaque(this._data);
        }

        public void xdrDecode(XdrDecodingStream xdr)
        {
            this._attributes = new FileAttributes(xdr);
            this._data = xdr.xdrDecodeDynamicOpaque();
        }

        public FileAttributes Attributes
        {
            get
            { return this._attributes; }
        }

        public byte[] Data
        {
            get
            { return this._data; }
        }
    }
    // End of readres.cs
}